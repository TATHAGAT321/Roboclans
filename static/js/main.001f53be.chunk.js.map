{"version":3,"sources":["components/roboapp.js","components/cardlist.js","components/searchbox.js","components/scroll.js","components/ErrorBoundary.js","container/App.js","reportWebVitals.js","index.js"],"names":["cards","props","className","alt","src","name","style","overflowX","email","robots","map","user","i","id","first","last","searchbox","searchstring","type","placeholder","onChange","Scroll","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","searchboxst","event","searchtext","target","value","robotlist","fetch","then","response","json","users","results","matchingrobots","filter","firstName","toLowerCase","lastName","searchInput","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAYeA,EAXH,SAACC,GACZ,OACI,sBAAKC,UAAY,oDAAjB,UACA,qBAAKC,IAAI,cAAcC,IAAG,+BAA4BH,EAAMI,KAAlC,4BAC1B,sBAAKH,UAAU,KAAf,UACA,mCAAMD,EAAMI,KAAZ,OACA,qBAAIC,MAAO,CAACC,UAAW,UAAvB,cAAoCN,EAAMO,MAA1C,cCcUR,EAlBH,SAAC,GAAY,IAAXS,EAAU,EAAVA,OACb,OACA,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACjB,OACF,cAAC,EAAD,CAEAC,GAAIF,EAAKE,GACTR,KAAMM,EAAKN,KAAKS,MAAQ,IAAMH,EAAKN,KAAKU,KACxCP,MAAOG,EAAKH,OAHLI,SCDKI,EAPG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEnB,OACG,uBAAOf,UAAU,gCAAgCgB,KAAK,OAAOC,YAAY,YAAYC,SAAUH,KCKpFI,EARA,SAACpB,GACf,OACO,qBAAKK,MAAO,CAACgB,UAAW,SAAUC,OAAQ,oBAAsBC,OAAS,SAAzE,SACCvB,EAAMwB,YCiBAC,E,kDAlBd,WAAYzB,GAAO,IAAD,8BACb,cAAMA,IACD0B,MAAQ,CACZC,UAAU,GAHE,E,qDAMf,SAAkBC,EAAMC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAE7B,WACC,OAAGG,KAAKJ,MAAMC,SACC,0DAGNG,KAAK9B,MAAMwB,a,GAfMQ,IAAMC,WCqDnBC,E,kDAjDZ,aAAe,IAAD,8BACZ,gBAaFC,YAAc,SAACC,GACd,EAAKL,SAAS,CAAEM,WAAaD,EAAME,OAAOC,SAbzC,EAAKb,MAAQ,CACZc,UAAW,GACXH,WAAa,IAJF,E,qDAQd,WAAqB,IAAD,OACnBI,MAAM,qDACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAW,EAAKd,SAAS,CAACS,UAAUK,EAAMC,e,oBAOnD,WACC,MAA+BhB,KAAKJ,MAA7Bc,EAAP,EAAOA,UAAUH,EAAjB,EAAiBA,WACZU,EAAiBP,EAAUQ,QAAO,SAACR,GAClC,IAAMS,EAAYT,EAAUpC,KAAKS,MAAMqC,cACjCC,EAAYX,EAAUpC,KAAKU,KAAKoC,cAChCE,EAAcf,EAAWa,cAChC,OAASD,EAAUI,SAASD,IAClBD,EAASE,SAASD,MAEjC,OAAIZ,EAAUc,OAKT,sBAAKrD,UAAU,aAAf,UACC,oBAAIA,UAAU,OAAd,yBACC,cAAC,EAAD,CAAWe,aAAcc,KAAKK,cAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAO3B,OAAQuC,WATf,oBAAI9C,UAAY,UAAhB,2B,GA9BO+B,IAAMC,WCOTsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.001f53be.chunk.js","sourcesContent":["import React from 'react';\nvar cards = (props)=>{\n\treturn (\n     <div className = \"bg-light-green tc dib bw1 pa3 ma3 br2 grow w-20-l\" >\n     <img alt=\"I'm a robot\" src = {`https://robohash.org/${props.name}?set=set3&size=200x200`} />\n     <div className=\"tc\">\n     <h4> {props.name} </h4>\n     <h5 style={{overflowX: \"scroll\"}}> {props.email} </h5>\n     </div>\n     </div>\n\t);\n}\nexport default cards; ","import React from 'react';\nimport Roboapp from'./roboapp';\n\nvar cards = ({robots})=>{\n\treturn(\n\t<div>\n\t{\n\t    robots.map((user,i)=>{\n\t    return (\n\t\t\t<Roboapp\n\t\t\tkey = {i} \n\t\t\tid={user.id} \n\t\t\tname={user.name.first + \" \" + user.name.last} \n\t\t\temail={user.email} />\n\t    )\n\t    })\n    }\n    </div>\n   );\n};\n\nexport default cards; \n","import React from 'react';\n\nconst searchbox = ({searchstring}) => {\n\n\treturn(\n    <input className='br3 pa2 ma3 ba bw1 b--blue tc' type='text' placeholder='searchbox' onChange={searchstring} />\n   );\n\n}\nexport default searchbox;","import React from 'react';\n\nconst Scroll = (props)=>{\n\treturn (\n        <div style={{overflowY :\"scroll\", border: \"3px solid #357edd\" , height : \"650px\" }}>\n        {props.children}\n        </div>\n\t);\n};\n\nexport default Scroll;","import React from 'react';\n\n\nclass ErrorBoundary extends React.Component{\n\tconstructor(props){\n      super(props);\n      this.state = {\n      \thasError: false\n      }\n\t}\n    componentDidCatch(error,info){\n    \tthis.setState({hasError: true});\n    }\n\trender(){\n\t\tif(this.state.hasError){\n          return <h1> Some Error has occured </h1>;\n\t\t}\n\t\telse{\n\t\t\treturn (this.props.children);\n\t\t}\n\t}\n}\nexport default ErrorBoundary;","import React from 'react';\nimport Cards from '../components/cardlist.js';\nimport Searchbox from '../components/searchbox.js';\nimport Scroll from '../components/scroll.js';\nimport ErrorBoundary from '../components/ErrorBoundary.js';\nclass App extends React.Component{ \n   \n   constructor() {\n   \t super();\n     this.state = {\n     \trobotlist: [],\n     \tsearchtext : ''\n     };\n\n   }\n   componentDidMount() {\n    fetch('https://randomuser.me/api/1.3/?results=50&&nat=ch')\n    .then(response => response.json())\n    .then(users => { this.setState({robotlist:users.results})});\n   }\n    \n   searchboxst = (event) => {\n    this.setState({ searchtext : event.target.value})\n   }\n\n\trender(){\n  const {robotlist,searchtext} = this.state;\n\tconst matchingrobots = robotlist.filter((robotlist) =>{\n        const firstName = robotlist.name.first.toLowerCase();\n        const lastName  = robotlist.name.last.toLowerCase();\n        const searchInput = searchtext.toLowerCase();\n      \treturn ( firstName.includes(searchInput) \n              || lastName.includes(searchInput));\n      });\n  if(!robotlist.length){\n    return <h1 className = 'tc blue'> Loading </h1>; \n  }\n  else{ \n\t  return(\n       <div className=\"tc pa3 ma3\">\n        <h1 className=\"blue\"> Roboclans </h1>\n         <Searchbox searchstring={this.searchboxst}/>\n         <Scroll>\n          <ErrorBoundary>\n           <Cards robots={matchingrobots}/>\n          </ErrorBoundary>\n         </Scroll>\n       </div>\n\n\t    );\n    } \n     \n  }\n\n} \n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App.js'\nimport reportWebVitals from './reportWebVitals';\nimport tachyons from 'tachyons'; \n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}